name: 1 Sync Files from Private Repo

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0/1 * * *'

jobs:
  sync:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout current repository
      uses: actions/checkout@v4
      
    - name: Sync files from private repository
      id: sync_files
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          // 定义需要同步的文件列表
          const files = [
            'snow_epg.xml',
            'snow_epg.xml.gz',
            'README.md', 
            'chuanliu.xml',
            'cqunicom.xml',
            'epgastro_mst.xml',
            'epgindonesia.xml',
            'epgsooka_mst.xml',
            'epgunifi.xml',
            'singtel.xml',
            'epghebei.xml'
          ];
          
          let successFiles = [];
          let changedFiles = [];
          
          console.log('Starting file sync from private repository...');
          console.log('Files to sync:', files);
          
          for (const file of files) {
            try {
              console.log(`\nProcessing: ${file}`);
              
              // 获取源文件内容
              const response = await github.rest.repos.getContent({
                owner: context.repo.owner,
                repo: 'tvepg',
                path: file,
                headers: {
                  authorization: `token ${{ secrets.PAT_TOKEN }}`
                }
              });
              
              const sourceContent = Buffer.from(response.data.content, 'base64').toString();
              
              // 检查本地文件是否存在且内容是否相同
              let needsUpdate = true;
              if (fs.existsSync(file)) {
                const localContent = fs.readFileSync(file, 'utf8');
                if (localContent === sourceContent) {
                  needsUpdate = false;
                  console.log(`✓ No changes for: ${file}`);
                }
              }
              
              // 只有内容不同时才写入文件
              if (needsUpdate) {
                fs.writeFileSync(file, sourceContent);
                changedFiles.push(file);
                console.log(`✅ Updated: ${file}`);
              }
              
              successFiles.push(file);
              
            } catch (error) {
              console.log(`❌ Failed to sync ${file}: ${error.message}`);
              // 继续处理其他文件，不中断流程
            }
          }
          
          // 输出结果摘要
          console.log('\n=== Sync Summary ===');
          console.log(`✅ Successfully processed: ${successFiles.length}/${files.length} files`);
          console.log(`📝 Files updated: ${changedFiles.length} files`);
          if (changedFiles.length > 0) {
            console.log(`Changed files: ${changedFiles.join(', ')}`);
          } else {
            console.log('No files were updated - all files are already in sync');
          }
          
          // 设置输出变量供后续步骤使用
          // 注意：在 github-script 中，core 是自动可用的，不需要 require
          core.setOutput('changed_files', changedFiles.length > 0 ? 'true' : 'false');
          core.setOutput('changed_files_list', changedFiles.join(','));
          core.setOutput('success_files', successFiles.join(','));
          
    - name: Commit and push changes
      if: steps.sync_files.outputs.changed_files == 'true'
      env:
        CHANGED_FILES_LIST: ${{ steps.sync_files.outputs.changed_files_list }}
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        
        # 获取北京时间
        BEIJING_TIME=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')
        
        echo "Changed files: $CHANGED_FILES_LIST"
        
        # 只添加实际变化的文件
        IFS=',' read -ra FILES <<< "$CHANGED_FILES_LIST"
        for file in "${FILES[@]}"; do
          if [ -f "$file" ]; then
            echo "Adding $file to git"
            git add "$file"
          else
            echo "Warning: $file does not exist, skipping"
          fi
        done
        
        # 提交信息包含北京时间
        git commit -m "sync: update files from tvepg at $BEIJING_TIME
        
        - Updated: $CHANGED_FILES_LIST
        - Auto-sync from private repository"
        
        echo "Pushing changes to repository..."
        git push
        
        echo "✅ Successfully synced and committed changes"
        
    - name: No changes detected
      if: steps.sync_files.outputs.changed_files == 'false'
      run: |
        echo "✅ All files are already up to date, no changes to commit"