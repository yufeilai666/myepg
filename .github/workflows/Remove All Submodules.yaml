name: Remove All Submodules from Main and Logo_info Branches

on:
  workflow_dispatch:

jobs:
  remove-submodules:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config user.email "action@github.com"
        git config user.name "GitHub Action"

    - name: Remove all submodules from main branch
      run: |
        git checkout main
        
        # 强制删除所有可能的子模块目录和配置
        # 删除.gitmodules文件
        if [ -f .gitmodules ]; then
          git rm -f .gitmodules
        fi
        
        # 删除所有可能是子模块的目录
        for dir in $(find . -name ".gitmodules" -o -name ".git" -type d | grep -v "\.git/"); do
          if [ -f "$dir/../.git" ] || [ -f "$dir/../../.gitmodules" ]; then
            submodule_path=$(dirname "$dir" | sed 's|^\./||')
            git rm -rf --cached "$submodule_path" 2>/dev/null || true
            echo "尝试移除可能的子模块: $submodule_path"
          fi
        done
        
        # 使用git命令列出并删除所有子模块
        git submodule deinit -f . || true
        git submodule foreach --recursive 'git rm -rf --cached .' || true
        
        # 提交更改
        if git diff-index --quiet HEAD --; then
          echo "没有检测到子模块更改"
        else
          git commit -m "Remove all submodules from main branch"
          git push origin main
          echo "已从main分支移除所有子模块"
        fi

    - name: Remove all submodules from logo_info branch
      run: |
        git checkout logo_info
        
        # 强制删除所有可能的子模块目录和配置
        # 删除.gitmodules文件
        if [ -f .gitmodules ]; then
          git rm -f .gitmodules
        fi
        
        # 删除所有可能是子模块的目录
        for dir in $(find . -name ".gitmodules" -o -name ".git" -type d | grep -v "\.git/"); do
          if [ -f "$dir/../.git" ] || [ -f "$dir/../../.gitmodules" ]; then
            submodule_path=$(dirname "$dir" | sed 's|^\./||')
            git rm -rf --cached "$submodule_path" 2>/dev/null || true
            echo "尝试移除可能的子模块: $submodule_path"
          fi
        done
        
        # 使用git命令列出并删除所有子模块
        git submodule deinit -f . || true
        git submodule foreach --recursive 'git rm -rf --cached .' || true
        
        # 提交更改
        if git diff-index --quiet HEAD --; then
          echo "没有检测到子模块更改"
        else
          git commit -m "Remove all submodules from logo_info branch"
          git push origin logo_info
          echo "已从logo_info分支移除所有子模块"
        fi